<%
const { config, route, utils } = it;
const { _, formatDescription, fmtToJSDocLine, classNameCase } = utils;
const { raw, request, routeName } = route;
const jsDocDescription = raw.description ?
    ` * @description ${formatDescription(raw.description, true)}` :
    fmtToJSDocLine('No description', { eol: false });
const jsDocLines = _.compact([
    raw.tags?.length && ` * @tags ${raw.tags.join(", ")}`,
    ` * @name ${classNameCase(routeName.usage)}`,
    raw.operationId && ` * @operationId ${raw.operationId}`,
    raw.summary && ` * @summary ${_.replace(raw.summary, /\r\n/g, " ")}`,
    ` * @request ${_.upperCase(request.method)}:${raw.route}`,
    routeName.duplicate && ` * @originalName ${routeName.original}`,
    routeName.duplicate && ` * @duplicate`,
    request.security && ` * @secure`,
    ...(raw.responsesTypes.length
    ? raw.responsesTypes.map(
        ({ type, status, description, isSuccess }) =>
            ` * @response \`${status}\` ${description}`,
        )
    : []),
]).join("\n");


return {
  description: jsDocDescription,
  lines: jsDocLines,
}
%>